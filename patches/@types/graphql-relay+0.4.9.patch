patch-package
--- a/node_modules/@types/graphql-relay/index.d.ts
+++ b/node_modules/@types/graphql-relay/index.d.ts
@@ -68,6 +68,8 @@ export type ConnectionConfigNodeType =
 export interface ConnectionConfig {
     name?: string | null;
     nodeType: ConnectionConfigNodeType;
+    // TODO: This is an addition we've patched into our copy of the lib.
+    edgeType?: GraphQLObjectType;
     resolveNode?: GraphQLFieldResolver<any, any> | null;
     resolveCursor?: GraphQLFieldResolver<any, any> | null;
     edgeFields?: Thunk<GraphQLFieldConfigMap<any, any>> | null;
@@ -211,11 +213,11 @@ export function getOffsetWithDefault(
 
 // mutation/mutation.js
 
-export type mutationFn = (
-    object: any,
-    ctx: any,
+export type mutationFn<TInput, TOutput, TContext> = (
+    object: TInput,
+    ctx: TContext,
     info: GraphQLResolveInfo
-) => Promise<any> | any;
+) => Promise<TOutput> | TOutput;
 
 /**
  * A description of a mutation consumable by mutationWithClientMutationId
@@ -231,12 +233,12 @@ export type mutationFn = (
  * input field, and it should return an Object with a key for each
  * output field. It may return synchronously, or return a Promise.
  */
-export interface MutationConfig {
+export interface MutationConfig<TInput, TOutput, TContext> {
     name: string;
     description?: string;
     inputFields: Thunk<GraphQLInputFieldConfigMap>;
-    outputFields: Thunk<GraphQLFieldConfigMap<any, any>>;
-    mutateAndGetPayload: mutationFn;
+    outputFields: Thunk<GraphQLFieldConfigMap<TOutput, TContext>>;
+    mutateAndGetPayload: mutationFn<TInput, TOutput, TContext>;
     deprecationReason?: string;
 }
 
@@ -244,8 +246,8 @@ export interface MutationConfig {
  * Returns a GraphQLFieldConfig for the mutation described by the
  * provided MutationConfig.
  */
-export function mutationWithClientMutationId(
-    config: MutationConfig
+export function mutationWithClientMutationId<TInput, TOutput, TContext>(
+    config: MutationConfig<TInput, TOutput, TContext>
 ): GraphQLFieldConfig<any, any>;
 
 // node/node.js
