patch-package
--- a/node_modules/graphql-relay/lib/connection/arrayconnection.js
+++ b/node_modules/graphql-relay/lib/connection/arrayconnection.js
@@ -60,7 +60,8 @@ function connectionFromArraySlice(arraySlice, args, meta) {
       first = args.first,
       last = args.last;
   var sliceStart = meta.sliceStart,
-      arrayLength = meta.arrayLength;
+      arrayLength = meta.arrayLength,
+      resolveNode= meta.resolveNode;
 
   var sliceEnd = sliceStart + arraySlice.length;
   var beforeOffset = getOffsetWithDefault(before, arrayLength);
@@ -87,10 +88,15 @@ function connectionFromArraySlice(arraySlice, args, meta) {
   var slice = arraySlice.slice(Math.max(startOffset - sliceStart, 0), arraySlice.length - (sliceEnd - endOffset));
 
   var edges = slice.map(function (value, index) {
-    return {
+    const newEdge = {
       cursor: offsetToCursor(startOffset + index),
-      node: value
+      node: !!resolveNode ? resolveNode(value) : value,
     };
+
+    if (resolveNode) {
+      return { ...value, ...newEdge };
+    }
+    return newEdge;
   });
 
   var firstEdge = edges[0];
--- a/node_modules/graphql-relay/lib/connection/connection.js
+++ b/node_modules/graphql-relay/lib/connection/connection.js
@@ -3,7 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.connectionArgs = exports.backwardConnectionArgs = exports.forwardConnectionArgs = undefined;
+exports.connectionArgs = exports.backwardConnectionArgs = exports.forwardConnectionArgs = exports.PageInfoType = undefined;
 
 var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                    * Copyright (c) 2015-present, Facebook, Inc.
@@ -69,6 +69,7 @@ function connectionDefinitions(config) {
   var edgeType = new _graphql.GraphQLObjectType({
     name: name + 'Edge',
     description: 'An edge in a connection.',
+    interfaces: config.edgeInterfaces,
     fields: function fields() {
       return _extends({
         node: {
@@ -88,6 +89,7 @@ function connectionDefinitions(config) {
   var connectionType = new _graphql.GraphQLObjectType({
     name: name + 'Connection',
     description: 'A connection to a list of items.',
+    interfaces: config.connectionInterfaces,
     fields: function fields() {
       return _extends({
         pageInfo: {
@@ -108,7 +110,7 @@ function connectionDefinitions(config) {
 /**
  * The common page info type used by all connections.
  */
-var pageInfoType = new _graphql.GraphQLObjectType({
+var pageInfoType = exports.PageInfoType = new _graphql.GraphQLObjectType({
   name: 'PageInfo',
   description: 'Information about pagination in a connection.',
   fields: function fields() {
--- a/node_modules/graphql-relay/lib/index.js
+++ b/node_modules/graphql-relay/lib/index.js
@@ -30,6 +30,12 @@ Object.defineProperty(exports, 'forwardConnectionArgs', {
     return _connection.forwardConnectionArgs;
   }
 });
+Object.defineProperty(exports, 'PageInfoType', {
+  enumerable: true,
+  get: function get() {
+    return _connection.PageInfoType;
+  }
+});
 
 var _arrayconnection = require('./connection/arrayconnection.js');
 
