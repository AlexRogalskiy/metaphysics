type Artist {
  name: String
  slug: String
}

"""
The connection type for Artist.
"""
type ArtistConnection {
  """
  A list of edges.
  """
  edges: [ArtistEdge]

  """
  A list of nodes.
  """
  nodes: [Artist]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ArtistEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Artist
}

"""
Artwork or design object
"""
type Artwork {
  artists: [Artist!] @deprecated(reason: "Deprecated for artistsConnection")
  artistsConnection(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ArtistConnection

  """
  Unique ID for this work
  """
  id: ID!

  """
  Description of the work's medium
  """
  medium: String

  """
  Unique, friendly identifier for this work
  """
  slug: String!

  """
  A title, if any
  """
  title: String!
}

"""
The connection type for Artwork.
"""
type ArtworkConnection {
  """
  A list of edges.
  """
  edges: [ArtworkEdge]

  """
  A list of nodes.
  """
  nodes: [Artwork]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ArtworkEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Artwork
}

type Mutation {
  recordArtworkView(input: RecordArtworkViewInput!): RecordArtworkViewPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Partner {
  artworks: [Artwork!] @deprecated(reason: "Use artworks_connection")
  artworksConnection(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ArtworkConnection
  displayName: String
  display_name: String @deprecated(reason: "Use displayName")
  givenName: String
  given_name: String @deprecated(reason: "Use givenName")
  id: ID!
  relativeSize: Int
  relative_size: Int @deprecated(reason: "Use relativeSize")
  slug: String
  subscriptionState: String
  subscription_state: String @deprecated(reason: "Use subscriptionState")
}

type Query {
  """
  Find an artist by ID
  """
  artist(id: ID!): Artist

  """
  Find artists by ID
  """
  artists(ids: [ID!]!): [Artist!]

  """
  Find an artwork by ID
  """
  artwork(id: ID!): Artwork

  """
  Find artworks by ID
  """
  artworks(ids: [ID!]!): [Artwork!]

  """
  Autocomplete resolvers.
  """
  matchPartners(
    matchType: String
    page: Int = 1
    size: Int = 5
    term: String!
  ): [Partner!]

  """
  Autocomplete resolvers.
  """
  match_partners(
    match_type: String
    page: Int = 1
    size: Int = 5
    term: String!
  ): [Partner!] @deprecated(reason: "Use matchPartners")

  """
  Find partners by IDs
  """
  partners(ids: [ID!]!): [Partner!]
}

"""
Autogenerated input type of RecordArtworkView
"""
input RecordArtworkViewInput {
  artwork_id: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RecordArtworkView
"""
type RecordArtworkViewPayload {
  """
  Id of viewed artwork
  """
  artworkId: String!

  """
  Id of viewed artwork
  """
  artwork_id: String! @deprecated(reason: "Use artworkId")

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}
